[{"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\index.js":"1","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\App.js":"2","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\reportWebVitals.js":"3","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\Dataproviders\\AccountProvider.js":"4","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js":"5","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Detailedstockpage.js":"6","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Portfolioperformance.js":"7","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\CashStockProfit.js":"8","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\StocksTable.js":"9","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\LineChart.js":"10","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Stockcard.js":"11","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Offers.js":"12","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Chart.js":"13","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\StatsCard.js":"14","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\EditForm.js":"15","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Piechart.js":"16","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Profile.js":"17","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockProfile.js":"18","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockPerformance.js":"19","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\OfferForm.js":"20","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockStatsCard.js":"21"},{"size":658,"mtime":1610703476792,"results":"22","hashOfConfig":"23"},{"size":5773,"mtime":1611913529498,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1609849225857,"results":"25","hashOfConfig":"23"},{"size":2793,"mtime":1610703476773,"results":"26","hashOfConfig":"23"},{"size":3086,"mtime":1611913529512,"results":"27","hashOfConfig":"23"},{"size":1722,"mtime":1611913529501,"results":"28","hashOfConfig":"23"},{"size":1336,"mtime":1611913529513,"results":"29","hashOfConfig":"23"},{"size":1962,"mtime":1611913529510,"results":"30","hashOfConfig":"23"},{"size":2713,"mtime":1611913529518,"results":"31","hashOfConfig":"23"},{"size":2030,"mtime":1611913529511,"results":"32","hashOfConfig":"23"},{"size":7701,"mtime":1611569236941,"results":"33","hashOfConfig":"23"},{"size":6626,"mtime":1611913529504,"results":"34","hashOfConfig":"23"},{"size":8017,"mtime":1611913529500,"results":"35","hashOfConfig":"23"},{"size":937,"mtime":1611913710617,"results":"36","hashOfConfig":"23"},{"size":3521,"mtime":1611915767735,"results":"37","hashOfConfig":"23"},{"size":485,"mtime":1610703476784,"results":"38","hashOfConfig":"23"},{"size":2167,"mtime":1611913529514,"results":"39","hashOfConfig":"23"},{"size":3840,"mtime":1611913539836,"results":"40","hashOfConfig":"23"},{"size":3296,"mtime":1611913529505,"results":"41","hashOfConfig":"23"},{"size":4028,"mtime":1611915729839,"results":"42","hashOfConfig":"23"},{"size":915,"mtime":1611913529507,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dpmvsr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\index.js",[],["95","96"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\App.js",["97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\reportWebVitals.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\Dataproviders\\AccountProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Detailedstockpage.js",["107","108"],"import React from 'react';\r\nimport StocksTable from '../MainPage/StocksTable';\r\nimport Chart from './Chart';\r\nimport Offers from './Offers';\r\nimport Stockcard from './Stockcard';\r\nimport StockProfile from './StockProfile';\r\nimport StockPerformance from './StockPerformance';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport default function Detailedstockpage(){\r\n    let {symbol} = useParams();\r\n    \r\n    return(\r\n        <div>\r\n                    <div class=\"card m-3 border border-primary container mx-auto\">\r\n                        <h3 style={{textAlign: \"center\"}}>Portfolio balance of {symbol}</h3>\r\n                        <div className=\"row row-eq-height w-100 mx-auto\">  \r\n                                <div className=\"col ml-5 mr-4 card border border-info\">\r\n                                    <StockProfile symbol={symbol} />\r\n                                </div>\r\n                                <div className=\"col mr-5 ml-4 card border border-info\" style={{textAlign: \"right\"}}>                                   \r\n                                    <StockPerformance symbol={symbol}/>                                  \r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col mt-5\">\r\n                        <Chart symbol={symbol} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col mt-5\">\r\n                        <Offers symbol={symbol}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Portfolioperformance.js",["109","110"],"import React,{useState, useEffect} from 'react';\r\nimport './Portfolioperformance.css';\r\nimport StatsCard from './StatsCard';\r\nimport axios from 'axios';\r\n\r\nexport default function Portfolioperformance(props) {\r\n    const [Performance, setPerformance] = useState({});\r\n\r\n    useEffect(() => {\r\n        setPerformance(props.portfolioPerformance_Portfolioperformance)\r\n\r\n    }, [])\r\n\r\n    if (Performance === null) {\r\n        return (\r\n            <div>\r\n                <img\r\n                  className = \"mx-auto d-block\"\r\n                  id=\"loading\"\r\n                  src=\"/candle_loader.gif\"\r\n                  alt=\"loading candle chart\"\r\n                  width=\"70%\"\r\n                  height=\"auto\"\r\n                />\r\n            </div>\r\n        );\r\n      } else {\r\n        return(\r\n            <div className=\"w-100\"> \r\n                <StatsCard\r\n                    label={\"Total value\"}\r\n                    amount={`${Performance.portfolioTotalValue}`}\r\n                    icon={\"las la-money-bill-wave float-left\"}\r\n                />\r\n                <StatsCard\r\n                    label={\"Total stock value\"}\r\n                    amount={`${Performance.portfolioTotalStockValue}`}\r\n                    icon={\"las la-chart-line font-large-3 float-left\"}\r\n                />\r\n            </div>\r\n        )\r\n      }\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\CashStockProfit.js",["111","112"],"import React,{useState, useEffect} from 'react';\r\nimport StatsCard from './StatsCard';\r\nimport axios from 'axios';\r\n\r\nexport default function CashStockProfit(props) {\r\n    const [Performance, setPerformance] = useState({});\r\n\r\n    useEffect(() => {\r\n        console.log(\"CashStockProfit incoming: \")\r\n        console.log(props.portfolioPerformance)\r\n        setPerformance(props.portfolioPerformance_CashStockProfit)\r\n    }, [])\r\n\r\n    if (Performance === null) {\r\n        return (\r\n            <div>\r\n                <img\r\n                  className = \"mx-auto d-block\"\r\n                  id=\"loading\"\r\n                  src=\"/candle_loader.gif\"\r\n                  alt=\"loading candle chart\"\r\n                  width=\"70%\"\r\n                  height=\"auto\"\r\n                />\r\n            </div>\r\n        );\r\n      } else {\r\n        return(\r\n                <div className=\"m-3\">\r\n                        <StatsCard\r\n                        label={\"Profit in stocks\"}\r\n                        amount={`$ ${Performance.currentStockProfit}`}\r\n                        icon={\"las la-balance-scale font-large-3 float-left\"}\r\n                        /><StatsCard\r\n                            label={\"Profit in cash\"}\r\n                            amount={`$ ${Performance.investedCashProfit}`}\r\n                            icon={\"las la-piggy-bank font-large-3 float-left\"} \r\n                        /><StatsCard\r\n                            label={\"Stock profit rate\"}\r\n                            amount={`${Performance.percentageCurrentStockProfit} %`} \r\n                            icon={\"lar la-credit-card font-large-3 float-left\"}\r\n                        /><StatsCard\r\n                            label={\"Cash profit rate\"}\r\n                            amount={`${Performance.percentageInvestedCashProfit} %`}\r\n                            icon={\"las la-coins font-large-3 float-left\"}\r\n                        />\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\StocksTable.js",["113","114"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport {Row, Col, Card, Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default function StocksTable(){\r\n    const [StockList, setStockList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8080/user/getStockPerformanceList\")\r\n            .then((resp) => setStockList(resp.data));\r\n\r\n    }, [])\r\n\r\n\r\n    \r\n    return(\r\n        <div className=\"m-3 border border-info\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Table responsive>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Amount</th>\r\n                                            <th>Avg price</th>\r\n                                            <th>Purch value</th>\r\n                                            <th>Current price</th>\r\n                                            <th>Current value</th>\r\n                                            <th>Value change</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                    {StockList.map( (object, i) => {\r\n                        return(\r\n                            <React.Fragment key={i}>\r\n                                <tr className=\"tr-shadow\">\r\n                                    <a href={`/stockpage/${object.stock.symbol}`}>\r\n                                        <td className=\"text-center\">{object.stock.name}</td>\r\n                                    </a>\r\n                                    <td className=\"text-center\">{object.stockTotalAmount}</td>\r\n                                    <td className=\"text-center\">{`$ ${object.averagePurchasePrice}`}</td>\r\n                                    <td className=\"text-center\">{`$ ${object.totalPurchaseValue}`}</td>\r\n                                    <td className=\"text-center\">{`$ ${object.stockCurrentPrice}`}</td>\r\n                                    <td className=\"text-center\">{`$ ${object.stockCurrentValue}`}</td>\r\n                                    <td className=\"text-center\">{` ${object.stockValueChange} %`}</td>\r\n                                </tr>    \r\n                            </React.Fragment>\r\n                            )\r\n                    })}\r\n                    \r\n                </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n        </div>\r\n      )\r\n    \r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\LineChart.js",["115","116","117","118","119"],"import React,{useState, useEffect} from 'react';\r\nimport {Card, Body, Header} from 'react-bootstrap';\r\nimport './LineChart.scss';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function LineChart(props){\r\n    const [Performance, setPerformance] = useState({});\r\n\r\n    useEffect(() => {\r\n        setPerformance(props.portfolioPerformance_LineChart)\r\n    }, [])\r\n\r\n    if (Performance === null) {\r\n        return (\r\n            <div>\r\n                <img\r\n                  className = \"mx-auto d-block\"\r\n                  id=\"loading\"\r\n                  src=\"/candle_loader.gif\"\r\n                  alt=\"loading candle chart\"\r\n                  width=\"70%\"\r\n                  height=\"auto\"\r\n                />\r\n            </div>\r\n        );\r\n      } else {\r\n        return(\r\n            <div className=\"card m-3 border border-info\">\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h3 style={{textAlign:\"center\"}}>Cash/Stock rate</h3>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"row d-flex align-items-center\">\r\n                            <div className=\"col-9\">\r\n                                <h5 className=\"f-w-300 d-flex align-items-center m-b-0\">{`${Performance.percentageCashValue} %`}</h5>\r\n                            </div>\r\n\r\n                            <div className=\"col-3 text-right\">\r\n                                <h5 className=\"f-w-300 d-flex align-items-center m-b-0\">{`${Performance.percentageStockValue} %`}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"progress m-t-30\" style={{height: '7px'},{maxWidth: \"100\"}}>\r\n                            <div className=\"progress-bar progress-c-theme\" role=\"progressbar\" style={{width: `${Performance.percentageCashValue}%`}} aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Stockcard.js",["120","121"],"import React,{useState, useEffect, useContext} from 'react';\r\nimport './Stockcard.scss';\r\nimport axios from \"axios\";\r\nimport {MainpageAccountContext} from '../../Dataproviders/AccountProvider';\r\n\r\nexport default function Stockcard(props){\r\n    const [StockData,setStockData] = useState({});\r\n    const [QuoteData, setQuoteData] = useState({});\r\n    const [StockAmount, setStockAmount] = useState(0);\r\n    const [AccData] = useContext(MainpageAccountContext);\r\n    \r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://finnhub.io/api/v1/stock/profile2?symbol=${props.symbol}&token=butt2qv48v6skju2d1tg`)\r\n            .then((resp) =>{\r\n                setStockData(resp.data);\r\n            })\r\n\r\n        axios\r\n            .get(`http://localhost:8080/stock/getquote/${props.symbol}`)\r\n            .then((resp) =>{\r\n                setQuoteData(resp.data);\r\n            })\r\n\r\n        GetStockAmount();\r\n    }, [props.symbol])\r\n\r\n    function GetStockAmount(){\r\n      console.log(\"Stock amount\")\r\n      AccData.stockPerformanceList.map((obj) => {\r\n        if(obj.stock.symbol === props.symbol){\r\n          console.log(obj.stockTotalAmount);\r\n          setStockAmount(obj.stockTotalAmount);\r\n        }\r\n      })\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n        <div>\r\n          <div className=\"profile-card js-profile-card\">\r\n            <div className=\"profile-card__img\">\r\n              <img src={StockData.logo} alt=\"profile card\" />\r\n            </div>\r\n            <div className=\"profile-card__cnt js-profile-cnt\">\r\n              <div className=\"profile-card__name\">{StockData.name}</div>\r\n              <div className=\"profile-card__txt\"><strong>{StockData.finnhubIndustry}</strong> from<strong> {StockData.country}</strong></div>\r\n              <div className=\"profile-card-loc\">\r\n                <span className=\"profile-card-loc__icon\">\r\n                  <svg className=\"icon\"><use xlinkHref=\"#icon-location\" /></svg>\r\n                </span>\r\n                <span className=\"profile-card-loc__txt\">\r\n                  <a href={StockData.weburl}>{StockData.weburl}</a>\r\n                </span>\r\n              </div>\r\n              <div className=\"profile-card-inf\">\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${QuoteData.currentPrice}`}</div>\r\n                  <div className=\"profile-card-inf__txt\"><strong>Current price</strong></div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`${StockAmount} pcs.`}</div>\r\n                  <div className=\"profile-card-inf__txt\"><strong>Owned</strong></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-card-inf\">\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${QuoteData.openPrice}`}</div>\r\n                  <div className=\"profile-card-inf__txt\">Open price</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${QuoteData.highPrice}`}</div>\r\n                  <div className=\"profile-card-inf__txt\">High price</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${QuoteData.lowPrice}`}</div>\r\n                  <div className=\"profile-card-inf__txt\">Low price</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${QuoteData.previousClosePrice}`}</div>\r\n                  <div className=\"profile-card-inf__txt\">Close price</div>\r\n                </div>\r\n              </div>\r\n                \r\n              <div className=\"profile-card-inf\">\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{StockData.currency}</div>\r\n                  <div className=\"profile-card-inf__txt\">Currency</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{`$ ${StockData.marketCapitalization}`}</div>\r\n                  <div className=\"profile-card-inf__txt\">Capitalization</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{StockData.shareOutstanding}</div>\r\n                  <div className=\"profile-card-inf__txt\">Outstanding</div>\r\n                </div>\r\n                <div className=\"profile-card-inf__item\">\r\n                  <div className=\"profile-card-inf__title\">{StockData.ipo}</div>\r\n                  <div className=\"profile-card-inf__txt\">IPO</div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <svg hidden=\"hidden\">\r\n  <defs>\r\n    <symbol id=\"icon-location\" viewBox=\"0 0 32 32\">\r\n      <title>location</title>\r\n      <path d=\"M16 31.68c-0.352 0-0.672-0.064-1.024-0.16-0.8-0.256-1.44-0.832-1.824-1.6l-6.784-13.632c-1.664-3.36-1.568-7.328 0.32-10.592 1.856-3.2 4.992-5.152 8.608-5.376h1.376c3.648 0.224 6.752 2.176 8.608 5.376 1.888 3.264 2.016 7.232 0.352 10.592l-6.816 13.664c-0.288 0.608-0.8 1.12-1.408 1.408-0.448 0.224-0.928 0.32-1.408 0.32zM15.392 2.368c-2.88 0.192-5.408 1.76-6.912 4.352-1.536 2.688-1.632 5.92-0.288 8.672l6.816 13.632c0.128 0.256 0.352 0.448 0.64 0.544s0.576 0.064 0.832-0.064c0.224-0.096 0.384-0.288 0.48-0.48l6.816-13.664c1.376-2.752 1.248-5.984-0.288-8.672-1.472-2.56-4-4.128-6.88-4.32h-1.216zM16 17.888c-3.264 0-5.92-2.656-5.92-5.92 0-3.232 2.656-5.888 5.92-5.888s5.92 2.656 5.92 5.92c0 3.264-2.656 5.888-5.92 5.888zM16 8.128c-2.144 0-3.872 1.728-3.872 3.872s1.728 3.872 3.872 3.872 3.872-1.728 3.872-3.872c0-2.144-1.76-3.872-3.872-3.872z\"></path>\r\n      <path d=\"M16 32c-0.384 0-0.736-0.064-1.12-0.192-0.864-0.288-1.568-0.928-1.984-1.728l-6.784-13.664c-1.728-3.456-1.6-7.52 0.352-10.912 1.888-3.264 5.088-5.28 8.832-5.504h1.376c3.744 0.224 6.976 2.24 8.864 5.536 1.952 3.36 2.080 7.424 0.352 10.912l-6.784 13.632c-0.32 0.672-0.896 1.216-1.568 1.568-0.48 0.224-0.992 0.352-1.536 0.352zM15.36 0.64h-0.064c-3.488 0.224-6.56 2.112-8.32 5.216-1.824 3.168-1.952 7.040-0.32 10.304l6.816 13.632c0.32 0.672 0.928 1.184 1.632 1.44s1.472 0.192 2.176-0.16c0.544-0.288 1.024-0.736 1.28-1.28l6.816-13.632c1.632-3.264 1.504-7.136-0.32-10.304-1.824-3.104-4.864-5.024-8.384-5.216h-1.312zM16 29.952c-0.16 0-0.32-0.032-0.448-0.064-0.352-0.128-0.64-0.384-0.8-0.704l-6.816-13.664c-1.408-2.848-1.312-6.176 0.288-8.96 1.536-2.656 4.16-4.32 7.168-4.512h1.216c3.040 0.192 5.632 1.824 7.2 4.512 1.6 2.752 1.696 6.112 0.288 8.96l-6.848 13.632c-0.128 0.288-0.352 0.512-0.64 0.64-0.192 0.096-0.384 0.16-0.608 0.16zM15.424 2.688c-2.784 0.192-5.216 1.696-6.656 4.192-1.504 2.592-1.6 5.696-0.256 8.352l6.816 13.632c0.096 0.192 0.256 0.32 0.448 0.384s0.416 0.064 0.608-0.032c0.16-0.064 0.288-0.192 0.352-0.352l6.816-13.664c1.312-2.656 1.216-5.792-0.288-8.352-1.472-2.464-3.904-4-6.688-4.16h-1.152zM16 18.208c-3.424 0-6.24-2.784-6.24-6.24 0-3.424 2.816-6.208 6.24-6.208s6.24 2.784 6.24 6.24c0 3.424-2.816 6.208-6.24 6.208zM16 6.4c-3.072 0-5.6 2.496-5.6 5.6 0 3.072 2.528 5.6 5.6 5.6s5.6-2.496 5.6-5.6c0-3.104-2.528-5.6-5.6-5.6zM16 16.16c-2.304 0-4.16-1.888-4.16-4.16s1.888-4.16 4.16-4.16c2.304 0 4.16 1.888 4.16 4.16s-1.856 4.16-4.16 4.16zM16 8.448c-1.952 0-3.552 1.6-3.552 3.552s1.6 3.552 3.552 3.552c1.952 0 3.552-1.6 3.552-3.552s-1.6-3.552-3.552-3.552z\"></path>\r\n    </symbol>\r\n  </defs>\r\n</svg>\r\n      </div>)\r\n        \r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Offers.js",["122","123"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport './Offers.css';\r\nimport dayjs from \"dayjs\";\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport OfferForm from './OfferForm';\r\nimport EditForm from './EditForm';\r\nimport {MainpageAccountContext} from '../../Dataproviders/AccountProvider';\r\n\r\n\r\nexport default function Offers(props){\r\n    const [Offers, setOffers] = useState([]);\r\n    const [isFormModalVisible, setisFormModalVisible] = useState(false);\r\n    const [isEditModalVisible, setisEditModalVisible] = useState(false);\r\n    const [Cash, setCash] = useState(0);\r\n    const [Edited, setEdited] = useState({});\r\n    const [Available, setAvailable] = useState(0);\r\n    const [AccData] = useContext(MainpageAccountContext);\r\n\r\n\r\n    const getNumberOfStocks = (symbol) => {\r\n      AccData.stockPerformanceList.map((object) => {\r\n        if(object.stock.symbol === symbol){\r\n          setAvailable(object.stockTotalAmount);\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8080/user/getoffers/${props.symbol}`)\r\n            .then((resp) =>{\r\n                setOffers(resp.data);\r\n                //setCash(resp.data.cash);\r\n            }) \r\n    }, [props.symbol])\r\n\r\n    function DeleteOffer(id){\r\n        axios\r\n            .delete(`http://localhost:8080/user/deleteoffer/${id}`);;\r\n    }\r\n\r\n    function DecideOfferType(i){\r\n        if(Offers[i].offerType === \"BUY\"){\r\n            return(<div className=\"profile-card__button button--blue\">Buy</div>)\r\n        } else{\r\n            return(<div className=\"profile-card__button button--orange\">Sell</div>)\r\n        }\r\n    }\r\n\r\n    function isSpacer(i) {\r\n        if (Offers.length !== i && i !== 0){\r\n            return(<tr className=\"spacer\"></tr>)\r\n        }\r\n    }\r\n\r\n    function showEditModal(object){\r\n        \r\n        setEdited(object);\r\n        setisEditModalVisible(true);\r\n    }\r\n\r\n    function hideEditModal(){\r\n        setEdited({});\r\n        setisEditModalVisible(false);\r\n    }\r\n\r\n    function showFormModal(){\r\n        setisFormModalVisible(true);\r\n    }\r\n\r\n    function OfferModal(props){\r\n\r\n        return(\r\n            <Modal\r\n            {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Place your offer\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <OfferForm />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        )\r\n    }\r\n\r\n    function EditModal(props){\r\n        console.log(Edited);\r\n        return(\r\n            <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit your offer\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <EditForm available={Available} getNumber={getNumberOfStocks} id={Edited? Edited.id : 0} stock={Edited.stock? Edited.stock.symbol : \"\"} type={Edited? Edited.offerType : \"\"} quantity={Edited? Edited.quantity : 0} price={Edited? Edited.price : 0} cash={Cash}/>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n    <div className = \"profile-card\">\r\n        <OfferModal \r\n        show={isFormModalVisible}\r\n        onHide={() => setisFormModalVisible(false)}\r\n        />\r\n        \r\n        <EditModal\r\n        show={isEditModalVisible}\r\n        onHide={() => hideEditModal}\r\n        />\r\n        <div class=\"table-data__tool\">\r\n            <div class=\"table-data__tool-left\">\r\n            </div>\r\n            <div class=\"table-data__tool-right\">\r\n                <button class=\"au-btn au-btn-icon au-btn--green au-btn--small\" onClick={showFormModal}>\r\n                    <i class=\"zmdi zmdi-plus\"></i>Add item</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"table-responsive table-responsive-data2 mx-auto\">\r\n          <table className=\"table table-data2\">\r\n            <thead>\r\n              <tr style={{textAlign:\"center\"}}>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Quantity</th>\r\n                <th>Total value</th>\r\n                <th>Price</th>\r\n                <th>Offer type</th>\r\n                <th>Offer date</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                {Offers.map( (object, i) => {\r\n                    let OfferType = DecideOfferType(i);\r\n                    return(\r\n                        <React.Fragment>\r\n                            {isSpacer(i)}\r\n                            <tr className=\"tr-shadow\">\r\n                                <td className=\"text-center\">{object.id}</td>\r\n                                <td className=\"text-center\">{object.stock.name}</td>\r\n                                <td className=\"text-center\">{object.quantity}</td>\r\n                                <td className=\"text-center\">{`$ ${object.totalValue}`}</td>\r\n                                <td className=\"text-center\">{`$ ${object.price}`}</td>\r\n                                <td className=\"text-center align-middle\">{OfferType}</td>\r\n                                <td className=\"text-center\">{dayjs(object.offerDate).format('YYYY MMM DD HH:mm')}</td>\r\n                                <td className=\"text-center\">\r\n                                    <div className=\"table-data-feature\">\r\n                                        <button className=\"item\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\" onClick={_ => showEditModal(object)}>\r\n                                            <i className=\"las la-edit\" />\r\n                                        </button>\r\n                                        <button className=\"item\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\" onClick={_ => DeleteOffer(object.id)} type=\"submit\">\r\n                                            <i className=\"la la-trash\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </React.Fragment>)\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      )\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\Chart.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\StatsCard.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\EditForm.js",["124"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Piechart.js",["125"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\MainPage\\Profile.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockProfile.js",["126","127"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockPerformance.js",["128"],"import React,{useState, useEffect} from 'react';\r\n//import './Portfolioperformance.css';\r\nimport StockStatsCard from './StockStatsCard';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function Portfolioperformance(props) {\r\n    const [StockPerformance, setStockPerformance] = useState({});\r\n\r\n    useEffect(() => {\r\n        ApiCall();\r\n        setInterval(() => {\r\n            ApiCall();\r\n        }, 20000)\r\n\r\n    }, [])\r\n\r\n\r\n    function ApiCall() {\r\n        axios\r\n            .get(`http://localhost:8080/user/getStockPerformance/${props.symbol}`)\r\n            .then((resp) => {\r\n                setStockPerformance(resp.data)\r\n                console.log(\"getStockPerfomanceList\")\r\n                console.log(resp.data)\r\n            })\r\n    }\r\n\r\n    if (StockPerformance == null) {\r\n        return (\r\n            <div>\r\n                <img\r\n                  className = \"mx-auto d-block\"\r\n                  id=\"loading\"\r\n                  src=\"/candle_loader.gif\"\r\n                  alt=\"loading candle chart\"\r\n                  width=\"70%\"\r\n                  height=\"auto\"\r\n                />\r\n            </div>\r\n        );\r\n      } else {\r\n    return(\r\n        <div class=\"container w-100\">\r\n            <div class=\"col align-self-center\">\r\n                <StockStatsCard\r\n                    label={\"Current price\"}\r\n                    amount={<NumberFormat value={StockPerformance.stockCurrentPrice} displayType={'text'} thousandSeparator={true} prefix={'$ '}/> }\r\n                    icon={\"las la-hand-holding-usd font-large-3 float-left\"}\r\n                />\r\n                <StockStatsCard\r\n                    label={\"Number of stocks\"}\r\n                    amount={<NumberFormat value={StockPerformance.stockTotalAmount} displayType={'text'} thousandSeparator={true} suffix={' pcs'}/>}\r\n                    icon={\"las la-atom font-large-3 float-left\"}\r\n                />\r\n                <StockStatsCard\r\n                    label={\"Avg. pruchase price\"}\r\n                    amount={<NumberFormat value={StockPerformance.averagePurchasePrice} displayType={'text'} thousandSeparator={true} prefix={'$ '}/> }\r\n                    icon={\"las la-money-bill font-large-3 float-left\"}\r\n                />\r\n                <StockStatsCard\r\n                    label={\"Stock value change\"}\r\n                    amount={<NumberFormat value={StockPerformance.stockValueChange * 100} displayType={'text'} thousandSeparator={true} suffix={' %'}/>}\r\n                    icon={\"las la-percent font-large-3 float-left\"}\r\n                />\r\n                <StockStatsCard\r\n                    label={\"Purchase value\"}\r\n                    amount={<NumberFormat value={StockPerformance.totalPurchaseValue} displayType={'text'} thousandSeparator={true} prefix={'$ '}/>}  \r\n                    icon={\"las la-laptop-code font-large-3 float-left\"}\r\n                />\r\n                <StockStatsCard\r\n                    label={\"Current value\"}\r\n                    amount={<NumberFormat value={StockPerformance.stockCurrentValue} displayType={'text'} thousandSeparator={true} prefix={'$ '}/>}\r\n                    icon={\"las la-dollar-sign font-large-3 float-left\"}\r\n                />\r\n\r\n\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\OfferForm.js",["129","130"],"C:\\Users\\Tamás\\source\\repos\\stock-trader3.0\\stocktrader\\src\\components\\DetailedStockPage\\StockStatsCard.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":29,"column":11,"nodeType":"137","endLine":29,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":52,"column":17,"nodeType":"137","endLine":52,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":58,"column":17,"nodeType":"137","endLine":58,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":64,"column":17,"nodeType":"137","endLine":64,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":70,"column":17,"nodeType":"137","endLine":70,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":79,"column":15,"nodeType":"137","endLine":79,"endColumn":68},{"ruleId":"135","severity":1,"message":"136","line":85,"column":17,"nodeType":"137","endLine":85,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":91,"column":17,"nodeType":"137","endLine":91,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":97,"column":17,"nodeType":"137","endLine":97,"endColumn":42},{"ruleId":"135","severity":1,"message":"136","line":103,"column":17,"nodeType":"137","endLine":103,"endColumn":42},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"142","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"143","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":12,"column":8,"nodeType":"146","endLine":12,"endColumn":10,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"143","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"148","line":12,"column":8,"nodeType":"146","endLine":12,"endColumn":10,"suggestions":"149"},{"ruleId":"138","severity":1,"message":"150","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":12},{"ruleId":"138","severity":1,"message":"151","line":3,"column":14,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"138","severity":1,"message":"152","line":2,"column":15,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"153","line":2,"column":21,"nodeType":"140","messageId":"141","endLine":2,"endColumn":27},{"ruleId":"138","severity":1,"message":"143","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"144","severity":1,"message":"154","line":12,"column":8,"nodeType":"146","endLine":12,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":44,"column":80,"nodeType":"158","messageId":"159","endLine":44,"endColumn":81},{"ruleId":"144","severity":1,"message":"160","line":26,"column":8,"nodeType":"146","endLine":26,"endColumn":22,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":30,"column":46,"nodeType":"164","messageId":"165","endLine":30,"endColumn":48},{"ruleId":"138","severity":1,"message":"166","line":15,"column":18,"nodeType":"140","messageId":"141","endLine":15,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":22,"column":49,"nodeType":"164","messageId":"165","endLine":22,"endColumn":51},{"ruleId":"138","severity":1,"message":"167","line":2,"column":33,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"168","line":1,"column":15,"nodeType":"140","messageId":"141","endLine":1,"endColumn":23},{"ruleId":"138","severity":1,"message":"169","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"170","line":22,"column":6,"nodeType":"146","endLine":22,"endColumn":8,"suggestions":"171"},{"ruleId":"144","severity":1,"message":"172","line":16,"column":8,"nodeType":"146","endLine":16,"endColumn":10,"suggestions":"173"},{"ruleId":"138","severity":1,"message":"167","line":2,"column":33,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"144","severity":1,"message":"174","line":21,"column":8,"nodeType":"146","endLine":21,"endColumn":29,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'StocksTable' is defined but never used.","Identifier","unusedVar","'Stockcard' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.portfolioPerformance_Portfolioperformance'. Either include it or remove the dependency array. If 'setPerformance' needs the current value of 'props.portfolioPerformance_Portfolioperformance', you can also switch to useReducer instead of useState and read 'props.portfolioPerformance_Portfolioperformance' in the reducer.","ArrayExpression",["178"],"React Hook useEffect has missing dependencies: 'props.portfolioPerformance' and 'props.portfolioPerformance_CashStockProfit'. Either include them or remove the dependency array. If 'setPerformance' needs the current value of 'props.portfolioPerformance_CashStockProfit', you can also switch to useReducer instead of useState and read 'props.portfolioPerformance_CashStockProfit' in the reducer.",["179"],"'Row' is defined but never used.","'Col' is defined but never used.","'Body' is defined but never used.","'Header' is defined but never used.","React Hook useEffect has a missing dependency: 'props.portfolioPerformance_LineChart'. Either include it or remove the dependency array. If 'setPerformance' needs the current value of 'props.portfolioPerformance_LineChart', you can also switch to useReducer instead of useState and read 'props.portfolioPerformance_LineChart' in the reducer.",["180"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'GetStockAmount'. Either include it or remove the dependency array.",["181"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCash' is assigned a value but never used.","'Alert' is defined but never used.","'useState' is defined but never used.","'DayJS' is defined but never used.","React Hook useEffect has a missing dependency: 'props.symbol'. Either include it or remove the dependency array. If 'setStockList' needs the current value of 'props.symbol', you can also switch to useReducer instead of useState and read 'props.symbol' in the reducer.",["182"],"React Hook useEffect has a missing dependency: 'ApiCall'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'getStockDataForOffer', 'props.stockList', and 'props.type'. Either include them or remove the dependency array. If 'setStockList' needs the current value of 'props.stockList', you can also switch to useReducer instead of useState and read 'props.stockList' in the reducer.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [props.portfolioPerformance_Portfolioperformance]",{"range":"199","text":"200"},"Update the dependencies array to be: [props.portfolioPerformance, props.portfolioPerformance_CashStockProfit]",{"range":"201","text":"202"},"Update the dependencies array to be: [props.portfolioPerformance_LineChart]",{"range":"203","text":"204"},"Update the dependencies array to be: [GetStockAmount, props.symbol]",{"range":"205","text":"206"},"Update the dependencies array to be: [props.symbol]",{"range":"207","text":"208"},"Update the dependencies array to be: [ApiCall]",{"range":"209","text":"210"},"Update the dependencies array to be: [Stock, getStockDataForOffer, props.stockList, props.symbol, props.type]",{"range":"211","text":"212"},[375,377],"[props.portfolioPerformance_Portfolioperformance]",[425,427],"[props.portfolioPerformance, props.portfolioPerformance_CashStockProfit]",[357,359],"[props.portfolioPerformance_LineChart]",[919,933],"[GetStockAmount, props.symbol]",[756,758],"[props.symbol]",[464,466],"[ApiCall]",[768,789],"[Stock, getStockDataForOffer, props.stockList, props.symbol, props.type]"]